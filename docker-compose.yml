version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672" # For RabbitMQ management interface
      - "5672:5672" # For RabbitMQ message broker
    logging:
      driver: none
    networks:
      - custom_network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    logging:
      driver: none
    volumes:
      - ./data:/data/db # For MongoDB data persistence

  producer:
    build: Producer/
    ports:
      - "5000:5000" # For Flask server
    networks:
      - custom_network

  consumer_health_check:
    # build: ./consumer
    build: Consumer_one/
    command: python3 health_check_consumer.py
    environment:
      - CONSUMER_ID=consumer_health_check
      - CONSUMER_IP=localhost
      - CONSUMER_PORT=9001
      - SERVER_HOST=producer
      - SERVER_PORT=5000
    depends_on:
      - rabbitmq
    networks:
      - custom_network

  consumer_insert_record:
    build: Consumer_two/
    command: python3 insert_record_consumer.py
    environment:
      - CONSUMER_ID=consumer_health_check
      - CONSUMER_IP=localhost
      - CONSUMER_PORT=9002
      - SERVER_HOST=producer
      - SERVER_PORT=5000
    depends_on:
      - rabbitmq
      - mongodb
    networks:
      - custom_network

  consumer_delete_record:
    build: Consumer_three/
    command: python3 delete_record_consumer.py
    environment:
      - CONSUMER_ID=consumer_delete_record
      - CONSUMER_IP=localhost
      - CONSUMER_PORT=9003
      - SERVER_HOST=producer
      - SERVER_PORT=5000
    depends_on:
      - rabbitmq
      - mongodb
    networks:
      - custom_network

  consumer_read_database:
    build: Consumer_four/
    command: python3 read_database_consumer.py
    environment:
      - CONSUMER_ID=consumer_read_database
      - CONSUMER_IP=localhost
      - CONSUMER_PORT=9004
      - SERVER_HOST=producer
      - SERVER_PORT=5000
    depends_on:
      - rabbitmq
      - mongodb
    networks:
      - custom_network

networks:
  custom_network:
    driver: bridge
